<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>design_patterns on P1n93r - 博学而精一</title><link>https://p1n93r.github.io/categories/design_patterns/</link><description>Recent content in design_patterns on P1n93r - 博学而精一</description><generator>Hugo -- gohugo.io</generator><language>en</language><lastBuildDate>Wed, 02 Sep 2020 21:37:36 +0800</lastBuildDate><atom:link href="https://p1n93r.github.io/categories/design_patterns/index.xml" rel="self" type="application/rss+xml"/><item><title>观察者模式</title><link>https://p1n93r.github.io/post/design_patterns/%E8%A7%82%E5%AF%9F%E8%80%85%E6%A8%A1%E5%BC%8F/</link><pubDate>Wed, 02 Sep 2020 21:37:36 +0800</pubDate><guid>https://p1n93r.github.io/post/design_patterns/%E8%A7%82%E5%AF%9F%E8%80%85%E6%A8%A1%E5%BC%8F/</guid><description>原理 思想：当对象间存在一对多关系时，可以使用观察者模式。当一个对象被修改时，会自动通知依赖它的对象。 如何使用：一个对象（被观察者）的状态发生</description></item><item><title>策略者模式</title><link>https://p1n93r.github.io/post/design_patterns/%E7%AD%96%E7%95%A5%E8%80%85%E6%A8%A1%E5%BC%8F/</link><pubDate>Sun, 30 Aug 2020 22:47:36 +0800</pubDate><guid>https://p1n93r.github.io/post/design_patterns/%E7%AD%96%E7%95%A5%E8%80%85%E6%A8%A1%E5%BC%8F/</guid><description>原理 在策略模式中，我们创建表示各种策略的对象和一个行为随着策略对象改变而改变的 context/service 对象。策略对象改变 context/service 对象的执行算法。 具体案例 项目结构如下： A</description></item></channel></rss>